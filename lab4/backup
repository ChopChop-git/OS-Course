#!/bin/bash

backups=$(ls "$HOME/" | grep -o -E "Backup-[0-9]{4}-[0-9]{2}-[0-9]{2}")

last_backup_name=""
last_backup_time=0
if [ "$backups" ]; then
  last_backup_name=$(tail -1 <<< "$backups")
  last_backup_date=$(grep -o -E "[0-9]{4}-[0-9]{2}-[0-9]{2}" <<< "$backups")
  last_backup_time=$(date -d "$last_backup_date" +%s)
fi

current_date=$(date +%Y-%m-%d)
full_current_time=$(date)
current_time=$(date -d "$current_date" +%s)

created=false

if [[ $current_time -gt $last_backup_time+60*60*24*7 ]]; then
  echo "Created new backup"
  backup_path="$HOME/Backup-$current_date"
  backup_name="Backup-$current_date"
  mkdir "$backup_path"
  full_current_time=$(date)
  created=true
else
  backup_path="$HOME/$last_backup_name"
  backup_name="$last_backup_name"
fi

source="$HOME/source"
report="$HOME/backup-report"

cd "$source"
files=$(find . -type f)

if [ $created == true ]; then
  echo "[$full_current_time] $backup_name was created, with files: " >> "$report"
  while IFS= read -r file; do
    cp --parents "$file" "$backup_path/"
    echo "$file" >> "$report"
  done <<< "$files"
else
  echo "[$full_current_time] Updates to $backup_name:" >> "$report"
  while IFS= read -r file; do
    if [ -f "$backup_path/$file" ]; then
      size=$(stat -c%s "$backup_path/$file")
      new_size=$(stat -c%s "$source/$file")
      if [ "$new_size" -ne "$size" ]; then
        mv "$backup_path/$file" "$backup_path/$file.$current_date"
        cp "$source/$file" "$backup_path/$file"
        echo "$file was rebackuped. Old one is named $file.$current_date" >> "$report"
      fi
    else
      cp --parents "$file" "$backup_path/"
      echo "$file was newly backuped" >> "$report"
    fi
  done <<< "$files"
fi
